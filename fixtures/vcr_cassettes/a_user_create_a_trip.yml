---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=<KEY>&query=Beijing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 22:39:03 GMT
      Expires:
      - Tue, 18 Jul 2017 22:44:03 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '842'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: |
        {
           "html_attributions" : [],
           "results" : [
              {
                 "formatted_address" : "Beijing, China",
                 "geometry" : {
                    "location" : {
                       "lat" : 39.90419989999999,
                       "lng" : 116.4073963
                    },
                    "viewport" : {
                       "northeast" : {
                          "lat" : 40.2164962,
                          "lng" : 116.7829835
                       },
                       "southwest" : {
                          "lat" : 39.6612714,
                          "lng" : 116.0119343
                       }
                    }
                 },
                 "icon" : "https://maps.gstatic.com/mapfiles/place_api/icons/geocode-71.png",
                 "id" : "6e8861ded5d03c5fdfe7a56526af08ecb433a575",
                 "name" : "Beijing",
                 "photos" : [
                    {
                       "height" : 600,
                       "html_attributions" : [
                          "\u003ca href=\"https://maps.google.com/maps/contrib/113662527701653401777/photos\"\u003eT. Seemann\u003c/a\u003e"
                       ],
                       "photo_reference" : "CmRaAAAAXCyZM5G3WIUKMSHRKCdJFWKo1HD64yg1Xkn5gJJSbqdYOoA_Idzd1fflkv1PMpElZQ1kyiWJMlRGJBbDEjGX4KaxgQt0ZoXzTaROgcO9702B-I_tIBi8hflopFIX4EwdEhAywpHHCVZ7Qg2r_Lyx708iGhTttlzXcsMZCyQvGeAn6pMdfXczrA",
                       "width" : 800
                    }
                 ],
                 "place_id" : "ChIJuSwU55ZS8DURiqkPryBWYrk",
                 "reference" : "CmRbAAAAVsP7t7L3dfT9YfVpJ4E1YjFYltOkweCnbk5tJtDS-EvwOSxyMRsHGR7khVrUZdmJwH1Opwtju9xqn-6-2FsbHmtV5oesY9HJGcQqcQL1amI721zCR-e1ZzN0McCGq5r8EhB8Y65TCCutWcubvjARPZr_GhRa8NtHamG5fdWHMNmSWb0hgxv2Vw",
                 "types" : [ "locality", "political" ]
              }
           ],
           "status" : "OK"
        }
    http_version: 
  recorded_at: Tue, 18 Jul 2017 22:39:03 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=<KEY>&keyword=attractions&language=english&location=39.90419989999999,116.4073963&radius=5000&types=point-of-interest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 22:39:03 GMT
      Expires:
      - Tue, 18 Jul 2017 22:44:03 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '9855'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 18 Jul 2017 22:39:03 GMT
recorded_with: VCR 3.0.3
