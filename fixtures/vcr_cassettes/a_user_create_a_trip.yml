---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/textsearch/json?key=<KEY>&query=Beijing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 20 Jul 2017 04:50:09 GMT
      Expires:
      - Thu, 20 Jul 2017 04:55:09 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '844'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: |
        {
           "html_attributions" : [],
           "results" : [
              {
                 "formatted_address" : "Beijing, China",
                 "geometry" : {
                    "location" : {
                       "lat" : 39.90419989999999,
                       "lng" : 116.4073963
                    },
                    "viewport" : {
                       "northeast" : {
                          "lat" : 40.2164962,
                          "lng" : 116.7829835
                       },
                       "southwest" : {
                          "lat" : 39.6612714,
                          "lng" : 116.0119343
                       }
                    }
                 },
                 "icon" : "https://maps.gstatic.com/mapfiles/place_api/icons/geocode-71.png",
                 "id" : "6e8861ded5d03c5fdfe7a56526af08ecb433a575",
                 "name" : "Beijing",
                 "photos" : [
                    {
                       "height" : 600,
                       "html_attributions" : [
                          "\u003ca href=\"https://maps.google.com/maps/contrib/113662527701653401777/photos\"\u003eT. Seemann\u003c/a\u003e"
                       ],
                       "photo_reference" : "CmRaAAAAy-AKzEttPY7XLwku82uqP3G96-q87NRtPt-qrrWTw8223h6cs7IjOyTEBxZLl9HqCE092nx1VLjHKdEtrZ6G5PMazP3fpMTUAqNqwnEMpp0AH7ygpb6b_Dw2kvfmIKrkEhACb5dxk2FFfmJf3OVQVvKUGhRLm_mgVpeXuXa-v2ILCY_lF3oTyQ",
                       "width" : 800
                    }
                 ],
                 "place_id" : "ChIJuSwU55ZS8DURiqkPryBWYrk",
                 "reference" : "CmRbAAAAj1ckoMVVTfnAYKxoPym26yOzVU6Af6hK3ayk42qO5RKjVulvncoqUz8SUjIvUP5f0f4brmI_R5juz0vUZAKR3r-0390yXWs2926aAKykgQ5dzvs95dXL_OtyTqq9Y2xWEhBCzqeAie4i2nOAoF1x99BdGhSB_GlGRXDbAhuo-ffTO8S3hSJ6dw",
                 "types" : [ "locality", "political" ]
              }
           ],
           "status" : "OK"
        }
    http_version: 
  recorded_at: Thu, 20 Jul 2017 04:50:09 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/photo?key=<KEY>&maxwidth=700&photoreference=CmRaAAAAy-AKzEttPY7XLwku82uqP3G96-q87NRtPt-qrrWTw8223h6cs7IjOyTEBxZLl9HqCE092nx1VLjHKdEtrZ6G5PMazP3fpMTUAqNqwnEMpp0AH7ygpb6b_Dw2kvfmIKrkEhACb5dxk2FFfmJf3OVQVvKUGhRLm_mgVpeXuXa-v2ILCY_lF3oTyQ
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 302
      message: Found
    headers:
      Date:
      - Thu, 20 Jul 2017 04:50:09 GMT
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Cache-Control:
      - no-cache, must-revalidate
      Location:
      - https://lh3.googleusercontent.com/p/AF1QipOhDQj4F-pt0a3lPoxTQYy67HS-0bdsFRhnrPw2=s1600-w700
      Content-Type:
      - text/html; charset=UTF-8
      Server:
      - pablo
      Content-Length:
      - '288'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: UTF-8
      string: "<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\n<TITLE>302
        Moved</TITLE></HEAD><BODY>\n<H1>302 Moved</H1>\nThe document has moved\n<A
        HREF=\"https://lh3.googleusercontent.com/p/AF1QipOhDQj4F-pt0a3lPoxTQYy67HS-0bdsFRhnrPw2=s1600-w700\">here</A>.\r\n</BODY></HTML>\r\n"
    http_version: 
  recorded_at: Thu, 20 Jul 2017 04:50:09 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=<KEY>&keyword=attractions&language=english&location=39.9041999,116.4073963&radius=5000&types=point-of-interest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 20 Jul 2017 04:50:09 GMT
      Expires:
      - Thu, 20 Jul 2017 04:55:09 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '9920'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 20 Jul 2017 04:50:09 GMT
recorded_with: VCR 3.0.3
