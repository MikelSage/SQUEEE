---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=AIzaSyDmYzIJbL5imbwwgYssI4VI11oJ0ZNUNAs&placeid=ChIJATr1n-Fx5kcRjQb6q6cdQDY
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sun, 17 Sep 2017 20:16:33 GMT
      Expires:
      - Sun, 17 Sep 2017 20:21:33 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '4990'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 17 Sep 2017 20:16:33 GMT
recorded_with: VCR 3.0.3
