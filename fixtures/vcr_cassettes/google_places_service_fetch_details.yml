---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=<KEY>&placeid=ChIJATr1n-Fx5kcRjQb6q6cdQDY
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Wed, 19 Jul 2017 21:48:47 GMT
      Expires:
      - Wed, 19 Jul 2017 21:53:47 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '4404'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 19 Jul 2017 21:48:47 GMT
recorded_with: VCR 3.0.3
