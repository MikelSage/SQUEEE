---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=<KEY>&keyword=attractions&language=english&location=39.9041999,116.4073963&radius=5000&types=point-of-interest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 20 Jul 2017 04:16:14 GMT
      Expires:
      - Thu, 20 Jul 2017 04:21:14 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '9919'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 20 Jul 2017 04:16:14 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=<KEY>&placeid=ChIJxUzg_TRT8DUR0MslZbKzbF4
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Thu, 20 Jul 2017 04:16:14 GMT
      Expires:
      - Thu, 20 Jul 2017 04:21:14 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '4296'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 20 Jul 2017 04:16:14 GMT
recorded_with: VCR 3.0.3
