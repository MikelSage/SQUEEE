---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=<KEY>&keyword=attraction&language=english&location=51.5074,0.1278&radius=5000&types=point-of-interest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 19:41:09 GMT
      Expires:
      - Tue, 18 Jul 2017 19:46:09 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '10210'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogW10sCiAgICJuZXh0X3BhZ2VfdG9rZW4iIDogIkNxUUNHZ0VBQU54bnRmZkdpekp4cER2SnlkZ01VNDFCM3drOWJyd213VmVseC10cVZHMEtZRUItWndmeWdHbzUzRHBRS3hMZ3pVSmZ3RVJ3X0VHN3M3TkU3eXo5R29DWGx3WnhFUWdxdmhvc0NldHFoNW54d3dxZW1HRXB4MGJvNl90QnNaQjR6eTRfU191WlVQVU1lRnVFclYtY0xsMzBMT2g0bzRlcnVudHVHUkVRdEQtZGNkcGFSWms3eXdWTGdpcDV1WGIzY3ZaUjZIRHJjMnVsMGNLSHdRRk5XMlk4X1dQRGlnYXVNellENjN6MldJb0lneS1Ua3JTVFF4UGJjY19XbVdTVTVwSmlaVTBtOEp6Zzlqc0E3VU1tVFN0anlEWkZOdHB4aDZLd0txYUlZMHRyN3NQdUltemZrOHJINV9hdnhsWkhrb21MZV9TSFNwVXh6cC1iRVpUY1NJUnZYbVYtWTNBcVdCWTlELXpKbk1qRGc5MG9URmlSSXhpN3dpcHRGOXRxX0JJUVRLUnlKQ1ZYdEUyXzA4QlhlVy1XeXhvVTBKS0ZGbG8yTTQ4eVNGeDNyU2k2ODVqMnR3YyIsCiAgICJyZXN1bHRzIiA6IFsKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjUwODg2MywKICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzODE4MgogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MTAyMTE5ODAyOTE0OSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzOTUzMDk4MDI5MTUwMgogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MDc1MTQwMTk3MDg0OSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzNjgzMzAxOTcwODQ5OAogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19idXNpbmVzcy03MS5wbmciLAogICAgICAgICAiaWQiIDogImUwNThhNjQ0YmYwMDQxY2JkZGU3NzZhZDQ4ZDQ5ZTZjNzFmZjZiZDIiLAogICAgICAgICAibmFtZSIgOiAiVGhlIENyb3NzbmVzcyBQdW1waW5nIFN0YXRpb24iLAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMxODksCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA2OTQwMjE4NDEwNDczMDgwNTIzL3Bob3Rvc1wiXHUwMDNlZmF0IGxlc1x1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQXkxUTNybWVUOFhyU2ZnbHNDUHBqVE9Bb1dRRk9TTVFaR0phMlRrYlM4UlZUNkFXWk9Od01SNlFwUXhtdGZnMUFBYTEzeFhrZkdySTFqMGR3S0FrNlE0dVdxREtRQmhBMUZHd09iWk9fWk9iZFN0cVA0RGtTOGpTUHh3ZGRIUV9VRWhDNG1oQVE2OEg5Z1k0enRMbUlkd2ZZR2hRYWlNMm5UX0NMRUVSekJGWFRwNWd4QTZ4UUh3IiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQ3ODQKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpBMTdBRW5xdjJFY1JsM2NSalZEeVBRQSIsCiAgICAgICAgICJyYXRpbmciIDogNC43LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbFJRQUFBQU53SUE5dy1rMkI2bmE0SkZ2MlYyenNlMmNZVWxKYUd0dW8tdjFvSC1FY3ZCby14cUJsZDhOc25tWmVvaVYtOGNHSFFUQTI5aVpqbkNNMU5rSDVIaDNZR19Na3VPM1RZN250YXUwVzJkU2FrU0VPamYyQUFEbHZ5aF9aSGo2VkFIaFlrYUZGYzNZOUNvb3NTV2ZUVG44MFBva0lqeHpwcXgiLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkNyb3NzbmVzcywgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM0MzIzNjk5OTk5OTksCiAgICAgICAgICAgICAgICJsbmciIDogMC4wOTk0MTYzOTk5OTk5OTk5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MzU1MjAyMzAyOTE0OSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEwMDc0OTc4MDI5MTUwMgogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MzI4MjIyNjk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDk4MDUxODE5NzA4NDk3OTcKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICI2ZDBkMmVkMzI1MzJkZWNlYjUyYjFkYzAzYzYwYTRmYzk3MDA4MGNkIiwKICAgICAgICAgIm5hbWUiIDogIkVhc3RidXJ5IE1hbm9yIEhvdXNlIiwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxNTM2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMzE2MDAyMDQyMzg3NDg1NTczMC9waG90b3NcIlx1MDAzZUJqw7ZybiBIYWdsdW5kXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBN0Y2YzFoekhlV2pWSVB5OEJ3Z1ZUaFBDN3JyYlBrQ3R2dk4zMkZJa0JJLVJsSDBsUmJPYkdRUWU4QnRvUTlBVXhrc2E3LUJoQngyX2J2ZHp2VnpLNDQ0QkZDNWVvOTAtV21TVU1wanZmeHVpNVRmMVdBamswRlh4UEhQWUQ4SC1FaERLblp3UzhWTUdsSkNRbjFoSGtsbE9HaFRoNkRxWFBWZ0Z2XzZjREhtQ2I1LWhJamVjNEEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSnFhTS14LUNsMkVjUmZSLXFHZkJZd2tvIiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SUkFBQUFOd2pFNElkOXZuaThLZDhvOEg3dmo4WFRDXzNLdVhodVhtMHNHMU1qckZZRk52VUxUYUJ5anZMQktsbTB2ZHVhOHdBREF5QjVqdUxVRWh1anhhSTBlVlI0UDVBQVBMWTRIWHJ0WWxIVlc4bWk3SXAtMVpPTl9nU1R3dFhEdWRTU0VoRGIzeHRXanFCbldiLThmcG83QVhxMkdoUVUzcU91S09yXzlfQ3FHLVZxMGRfMjdvWFNwZyIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBhcmsiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICJFYXN0YnVyeSBTcXVhcmUsIEJhcmtpbmciCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImdlb21ldHJ5IiA6IHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IHsKICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MTc5Mjk1LAogICAgICAgICAgICAgICAibG5nIiA6IDAuMTkwNzc1NAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MTkyMTIxODAyOTE1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTkyMDE2NzgwMjkxNTAyCiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUxNjUxNDIxOTcwODUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4xODkzMTg4MTk3MDg0OTgKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL211c2V1bS03MS5wbmciLAogICAgICAgICAiaWQiIDogIjkxYzFlMjA0NmIzNGNiY2Q5ZTYwZmFkZWZjYThjYmE3YTgxNjVmNDgiLAogICAgICAgICAibmFtZSIgOiAiTmF0aW9uYWwgVHJ1c3QgLSBSYWluaGFtIEhhbGwiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZSwKICAgICAgICAgICAgIndlZWtkYXlfdGV4dCIgOiBbXQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDI5ODgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTAwMTk1NjMzMzg3ODE0NTI1NTI2L3Bob3Rvc1wiXHUwMDNlS2VuIEhhdHRcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFmbWJidl83TzhNamZHRUYwNy1tTHlyZnBVYjVVd2V3M1V0bVBVUnpyYWpsdU42MUw1cDRXTUM1a2dLSG5Ub2xIN2ljcFZrOWNCYm45czI4SGRiT2xQakRIbURRZjY0d3BoRWRqV2JXc254bkhydjlrVV80RTdFWlpoY1hicVByRUVoQWVpWFloRE54c1NaaU4tbWZrWVQtN0doVFozT1RnNUtJVDY2T1Z3eDg1MHNxcGVZV1ctQSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1MzEyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKRVhmRWVhbTYyRWNScE44dlhzamlrcEkiLAogICAgICAgICAicHJpY2VfbGV2ZWwiIDogMiwKICAgICAgICAgInJhdGluZyIgOiA0LjQsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlNBQUFBR0FoRXRFTld4WnRHYm03M2ZMMThrZWxCWXNyM1FFb193SGtWd0FNc0lXeGYyY1ZCXzQzdGNYOTZTSnFETTlGM0ZlQTFIaGNUR3E5ZU9ReXA2Mm1LNFRHOXd5emc3dnVqbHZEb1U2OU5EX0FNYTNSZC00cWFKanRaSkc1SUxEaVRFaEFWZHBfQVBKbFd6eWdVczhxRXFFZ3VHaFI4clA5Yk9XaGstSE9oNG5ETWV1NDEyR2pJa2ciLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbICJtdXNldW0iLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICJCcm9hZHdheSwgSGF2ZXJpbmcsIFJhaW5oYW0sIExvbmRvbiIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjUyMTg5MTksCiAgICAgICAgICAgICAgICJsbmciIDogMC4wNTk4MDE3OTk5OTk5OTk5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MjMyNDA4ODAyOTE1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDYxMTUwNzgwMjkxNTAyMDMKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTIwNTQyOTE5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjA1ODQ1MjgxOTcwODQ5Nzk2CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9nZW5lcmljX3JlY3JlYXRpb25hbC03MS5wbmciLAogICAgICAgICAiaWQiIDogIjRlNTgyZTJhNDEzZWE3NjdhZTAxODNmZDM0NGU4YWVlYTgyYjQwYTYiLAogICAgICAgICAibmFtZSIgOiAiRWFzdCBIYW0gTmF0dXJlIFJlc2VydmUgJiBWaXNpdG9yIENlbnRyZSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNTMxMiwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDM5MjgyNDcyODQ5NzA0NTg0NzYvcGhvdG9zXCJcdTAwM2VBcnVuIEJhbmVyamVlXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBS0hlYU5LTjBBeEhzeGNRQm01dGNoc0FuTzFiNVRJWTVIQ1p4d2lyZXJRbFNQSElIOWRXVHQwWmM3bnZuR0VIcVpwS0Y2d0tCTUJaRW03MXBmN0FzdTZESWRuRmk2T0Q3OWdGaTZVS2ZjRXdqbU1VMnd3dmYyQTBDbi1mV2Z1VzJFaERoWnJGUC12LTdIOWxYR3Y3VjRmX19HaFNfc1pkemE5bmI1SGVKa3drOXRidU5JQk13TXciLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjk4OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSlpaN25reVdtMkVjUlBZTmhrcUc2OGhnIiwKICAgICAgICAgInJhdGluZyIgOiAzLjgsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlJBQUFBNzhhSVAxNHJaMzl3ekdFUVBfaUhRREt0TVc5anh2eWVnWjJTRXdFRGdVUEFXb0lOOEF2WkJVMldJcHVRM0ZMU3BEX2IzY1FfQy1BTVVsVy1TLVZWN0RoNXlVUFc4UUlkekllRUtGZzAyM3dzUWRpeGIxTS1wbGVDUW9aS1BlWGJFaERQN2hzM3BuUGdnb2RDYnE3amNfbFJHaFFneXdyZmVKbVlTTEFwazliQWZrU2dfNVMwZXciLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbCiAgICAgICAgICAgICJwYXJrIiwKICAgICAgICAgICAgImNodXJjaCIsCiAgICAgICAgICAgICJwbGFjZV9vZl93b3JzaGlwIiwKICAgICAgICAgICAgInBvaW50X29mX2ludGVyZXN0IiwKICAgICAgICAgICAgImVzdGFibGlzaG1lbnQiCiAgICAgICAgIF0sCiAgICAgICAgICJ2aWNpbml0eSIgOiAiNjUgSGFtZXdheSwgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM0MzM1ODk5OTk5OTksCiAgICAgICAgICAgICAgICJsbmciIDogMC4wOTk0NDE2CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUzNTUyNjE4MDI5MTQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTAwNzY2NDgwMjkxNTAyCiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUzMjgyODIxOTcwODQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDk4MDY4NTE5NzA4NDk3OTYKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICI1MDM2Njc4Y2JiNTliMjhkMDUwNmYwNjJmMjk4NGFhMjU5OGZlNzliIiwKICAgICAgICAgIm5hbWUiIDogIk5hdGlvbmFsIFRydXN0IEVhc3RidXJ5IE1hbm9yIEhvdXNlIiwKICAgICAgICAgIm9wZW5pbmdfaG91cnMiIDogewogICAgICAgICAgICAib3Blbl9ub3ciIDogZmFsc2UsCiAgICAgICAgICAgICJ3ZWVrZGF5X3RleHQiIDogW10KICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiA3NjgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1ODAwOTI1NTIzODgyNzQ4MTgyL3Bob3Rvc1wiXHUwMDNlQmVuamFtaW4gS3JlbWVyXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBNDJnU2xJcHBKX0dqNEdfa1JSbER0ckJ2MzVDSE9HVFNQNVphLVhzTnVkalJwaFp6NVAtc3dKTFRfeGVnOU9TOEE0S1JCWkthTXBSMndRcDdYSnhuZ0c1M2lHYVp3d0dsTE9Cd0Z5d2hOWkVMYkVWUnR5dURCMlpYalJTWGhwdjdFaERmdzdsb212TlZHWmhUVHI5LWNYR2lHaFRwMjJHeXFOUGhYQjB6WGNZQ1VaVF95MTV5U3ciLAogICAgICAgICAgICAgICAid2lkdGgiIDogMTAyNAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkc5Q0JNT2VsMkVjUkkwQkZYRTJjeU1jIiwKICAgICAgICAgInByaWNlX2xldmVsIiA6IDIsCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJTQUFBQTQ4SkxlOXZaN1JTM1l6TDBpekJISDhHMVNMSEI0dVNkUFFtMzFkNm1mYnI4MmFXdUNTX0dXelBMakdvTzhEWm5JSGd3RDNWMWhPdUk0SFJyaUtoY0owRFJnYUpUcEpvb0FUYmk2bWttSkl5OXhnckZ1WjN1T3ROdmh1WWlOdUR5RWhDbmdSRTNFRDNabWFxZXJEN201eFExR2hTeEY0S2oybXRZMUc2ejlXR3hLRW4wcXV5UE1nIiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkVhc3RidXJ5IFNxdWFyZSwgQmFya2luZywgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDY3Mzg1LAogICAgICAgICAgICAgICAibG5nIiA6IDAuMDc5MjA4CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ2ODYxOTk4MDI5MTUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wODA1MTEwODAyOTE1MDIwNAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS40NjU5MjIwMTk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDc3ODEzMTE5NzA4NDk3OTcKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICIzZDdkNWZlNzdkMmE4MjA5YTFmN2RjZTIxMjQ5OWJhYzdkZjRkOGJjIiwKICAgICAgICAgIm5hbWUiIDogIlRoZSBXb29kbGFuZHMgRmFybSBUcnVzdCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMTM2NSwKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMDA5MjYxMDE1Mzc2NDgyNzQ2MDIvcGhvdG9zXCJcdTAwM2VUaGUgV29vZGxhbmRzIEZhcm0gVHJ1c3RcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFValBOaWw2aDQ5LUtwNjQyUy1DblRJT1JTLUtKYUVfeURCOHdmV2RveGJzV0ItZ2M0R2FqRHZ5V201Wk9Bb2FiMzhlV2lSMWhZbDBJdmlSak00MUlWaFYxVnJrTldrRlFxdFUwSmxpb1RnMm5EWWZ4aHBURGlnX2dpNlF3ZlJfZUVoQ3o2TGJyekZ6Szg2NHRHdGVpQVhFY0doVG5kWGdvcXdpOWhKVFRaYTlrUUR1LUpuUTM0ZyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxMzY2CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKa2VYWDJ5V3AyRWNSNTVicy0zWFk3bmsiLAogICAgICAgICAicmF0aW5nIiA6IDQuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SUkFBQUFnWkE2WEV2aV9fNGEwNFdCQW9VOGM2WWRRb1FnYVNwMU1ZdGVaLVBrSUFaeTZ2VE83N3dxOVUwbWtQdEhmbmtWTnBnTkplVjJNSTU4eWZvakFWX3FuVHZ2em1waDhubjJaMGJVR1RfZ3BnTnpMOFVsclR0T1BJMGt4WTFXYUQ5YkVoQzBNX0kyaHkxLTRDeW9BS1VUUVp4Y0doUUh6U3VLSnlOTERwVzJOSFRRUDNKV1A5N0RRdyIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgImZvb2QiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICIzMzEgU2hvb3RlcnMgSGlsbCwgV2VsbGluZyIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ2NjY0MSwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjA1OTgyNDAwMDAwMDAwMDAxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ2Nzk5MjA4MDI5MTQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDYxNDc5NDMwMjkxNTAyMDMKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDY1Mjk0MTE5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjA1ODc4MTQ2OTcwODQ5Nzk2CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9tdXNldW0tNzEucG5nIiwKICAgICAgICAgImlkIiA6ICIwYzQ5NjBiNWQzNTAxOTA1OGExMDA3NTRmNzFlOWYyNjBkMmZlNWQ4IiwKICAgICAgICAgIm5hbWUiIDogIlNldmVybmRyb29nIENhc3RsZSIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNjc0LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMjMwMTA5MzMxMTc2NDI0MzIyMC9waG90b3NcIlx1MDAzZVNldmVybmRyb29nIENhc3RsZVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQW5DQV83X1VxVVdQZzdIbzVQdWZMekRZYU5LRTFqZktVQUVSN0h0TUZBN2lJX2FBczFsM2RqMHE0bEF0MVZRZVJnOWVrMTk4LVp3bGg0SGhCVnZXUUZMUXdRaUlOLWxSNFc0UVlPaDE1aF91Q1d4c1BIUHkweW8xTUpWMzNndnRuRWhEUWV0dnl0YUdta0FZRUpuczctZ1FsR2hSV3E0Q0wyemp3b0pvMUZRZ0cyMHVSNTJjWGdnIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDY3MgogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkNSeDRhaHVwMkVjUlRpV1U4VUdCYnRFIiwKICAgICAgICAgInJhdGluZyIgOiA0LjYsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlNBQUFBZTFYR0R6a0lLVjZfQ0VraC1kbzVWUDNQQzhHSEFzd0NlNFZmZzJ6VUhQb0dTYVg1OVJlYTF5c3lYbkU5aXRGYVR1Uy1jTlh2SGE5cEtFb1IwV0hoTjc1dW1hRnIwTzlfczVsTlB6eVZqbktINnJtSnJ4dXlHREFTMi1pUXhnT3NFaEFSNzFoZnl6T1Zqdm1MUjlkOGhuWDhHaFFkYVV5Z3VCSUVRUWdtelFaNDJuYm1JUlFNUmciLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbCiAgICAgICAgICAgICJjYWZlIiwKICAgICAgICAgICAgInJlc3RhdXJhbnQiLAogICAgICAgICAgICAiZm9vZCIsCiAgICAgICAgICAgICJtdXNldW0iLAogICAgICAgICAgICAicG9pbnRfb2ZfaW50ZXJlc3QiLAogICAgICAgICAgICAiZXN0YWJsaXNobWVudCIKICAgICAgICAgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICJDYXN0bGUgV29vZCwgU2hvb3RlcnMgSGlsbCwgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDg3NDI1NywKICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzMDU1MjQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDg4Nzc0NjgwMjkxNSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzMTkwMTM4MDI5MTUwMgogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS40ODYwNzY3MTk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTI5MjAzNDE5NzA4NDk4CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9nZW5lcmljX2J1c2luZXNzLTcxLnBuZyIsCiAgICAgICAgICJpZCIgOiAiNzBlM2E4ODZkNmU5MTM4MTVjN2JhMDI2MjlhYWRkNWJkNWQ4Mjg2ZiIsCiAgICAgICAgICJuYW1lIiA6ICJMZXNuZXNzIEFiYmV5IFdvb2QgRm9zc2lsIFBhcmsiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNjcwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMTI1MTgzNTA2MTY2NDU0NzE4MC9waG90b3NcIlx1MDAzZVlpbmthIEFkZXlleWVcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFrSmNCcWQtWUZrbW5wQVpTWjNvMU1UWWM4VnVlX0YzTDdQeDY1MkZaYUtZSjNXUzk1SVdXTU82R2o2b19vZk91TmRZbWljMl94ZDJmcnQwUkU2LW9VUjA1d1MtLWR3bENiTGRIaG1PUFZzYjlPOU8wa2hvNkZycGtCRU9uQjNMbUVoQ2R6OERRQVpxUzFzS2QtZWRGWEw3R0doUVUwN1VlUHZoSHBxZzBJNFo4YWJQNDBxeXBCZyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAxODc4CiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKNzJPMWFnNnYyRWNSZFhNcTZfdTZzUGMiLAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SU0FBQUFLT3MyX0J1cmlyXzVMVG0yTzhfM3ZmdUJVMW5HdThKVUh5WUdPc0hpRGo2NGFDZDh6eDN5eUtpaVlVVW1fWkpib3dSQXMwS1l5SXVXTk1qSmhLc1VyTTUzRzlLU3hXZFdkSE16a1FCZWpNV3FIM0hYWXdDWW1FalVCbUNPaHEzTEVoQWN0VEN5Si0tWEg5MUIxQ2dKZk9vWkdoUks1c19ialJxbzFEb3ktSkhSS1BGMVpHQlZ3ZyIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBvaW50X29mX2ludGVyZXN0IiwgImVzdGFibGlzaG1lbnQiIF0sCiAgICAgICAgICJ2aWNpbml0eSIgOiAiQmVsdmVkZXJlIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM1NDQxOSwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjE0MTQwODEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM2ODcyNTMwMjkxNSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjE0MjQ3MjE5OTk5OTk5OTkKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM0MTc0NTY5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEzODIxNTgKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfcmVjcmVhdGlvbmFsLTcxLnBuZyIsCiAgICAgICAgICJpZCIgOiAiMjgwZTQ5ZjA2OTZjNGUwODA3NDA5Y2NjM2M2NGFjNjIzODQ4MWM1YiIsCiAgICAgICAgICJuYW1lIiA6ICJHb3Jlc2Jyb29rIFBhcmsiLAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDE4MzYsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3NDQwNzA4NzUzMTUxNjM3MjEyL3Bob3Rvc1wiXHUwMDNlTGVpZGlhbmUgR3Jhw6dhXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBYlVGOFpRckNjQ0w0TXdxRVBweUVOcm15UFZta2hXb0RTb3Fnd05GQ0ctc29LT2R6MXBoLS02YWh3TXFOM0xFTmE5VVk1bjlhVmlvZGVfOFBmQ2R0azJMNUtuSjVaTjF2MzlDa3NLNG0wNFpXTnM1UE11dGxGTkRodmVDaS1YazBFaEN1MmpRNGxpT0s5TU9JQzBlZ1IzWWpHaFFCelFNb3p1aXlubE9oZE1LdlNtYXA0QWVJZXciLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzI2NAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSi1SOTRMcUNsMkVjUllCUGY4bFplUjlJIiwKICAgICAgICAgInJhdGluZyIgOiAzLjksCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlNBQUFBRmZMNzJOZE1vM1J3VnhldDZSZ1RlN3BBWmo2ZlVCYzR0T3ZiZWlKVTJSRkhzd3NleTcyQll0eS11NURCSjdEWjIxMjlHR2p2TUJXaHpEQ2xHdUo1aHlsTDhjT1ZoMldXajdKM3A0N2NEVER6V2dnODRNcWRfYjdLSWtpQzZKdnpFaENxTl9CZnRXOVdfaWlIQWxtRHpGcmVHaFMtWUk0OVNFb1RvQ2UwblB6czZiTTQ3Uy1uVUEiLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbICJwYXJrIiwgInBvaW50X29mX2ludGVyZXN0IiwgImVzdGFibGlzaG1lbnQiIF0sCiAgICAgICAgICJ2aWNpbml0eSIgOiAiRGFnZW5oYW0gQXZlbnVlLCBEYWdlbmhhbSIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjU0NTE0ODk5OTk5OTk5LAogICAgICAgICAgICAgICAibG5nIiA6IDAuMTEwOTM5OAogICAgICAgICAgICB9LAogICAgICAgICAgICAidmlld3BvcnQiIDogewogICAgICAgICAgICAgICAibm9ydGhlYXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41NTUyNzAyOTk5OTk5OSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjExNTI5NzA1CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUzNTg2NTEwMDAwMDAxLAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTA0MTkwODUKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfYnVzaW5lc3MtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICIyMTFkYTc4YmUyZTAyZTI4NWZlNjE5MzljMGYwZjExMDA2MTc1ODZhIiwKICAgICAgICAgIm5hbWUiIDogIk1heWVzYnJvb2sgUGFyayIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IGZhbHNlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogMjg1MywKICAgICAgICAgICAgICAgImh0bWxfYXR0cmlidXRpb25zIiA6IFsKICAgICAgICAgICAgICAgICAgIlx1MDAzY2EgaHJlZj1cImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHMvY29udHJpYi8xMTY5MDE0NDI5NDg4NDg2NTUwMTkvcGhvdG9zXCJcdTAwM2VEYXJyZW4gU3RhbmxleVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQTNnLXUtNVpGUEotcjU5NXRKbmstQ3dLSVpGMkJJdVRqWTlyVmpSbmJOeDlNaU41VC1QNzB4ZFBId3BYaTJROFRxQmRuV245RzNmM2hnUFFJeWhXRHVUTEUzR05sLTdyanBtVjlxUmZtcXoxRzhlV0N3QnFNOVVTQzEyWjNBMnNKRWhEcnVaQTVmdVUzUjQycHp0UUoteE85R2hTdmFvVXlVbUJxbFUzX2lKYXE0dkNSQ0tlVm9RIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQyODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpyYWFOVGNLbDJFY1J6STdQZU1QaFozQSIsCiAgICAgICAgICJyYXRpbmciIDogNC4zLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJSQUFBQThWWGZaVWp0bEs4TWZfdm95V09fWVd5MWY5aFp3QWNGa0dwZzIzSHRvV0dUa09FSldqSi0yUWFwYjBKRmhQNUE3VXNZZV9xNW80Zzgwc21idlVSQkxTbWJTLXhVdldzUTdGN3d3eEZMOVRKOS1yVTd4SlIwbDVDdFg5aEd6dU13RWhBTENZMnhheThLOFF6aGh4U2xSQm9ZR2hUZlpKYk83alBRVEtYR2dSU0RwaERacTFwYk53IiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIjE4MCBMb2RnZSBBdmVudWUsIERhZ2VuaGFtIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTQxNjMxNiwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjEyNzY1NjEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTQyOTA4MjMwMjkxNDksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4xMjkwMTU1ODAyOTE1MDIKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTQwMjEwMjY5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjEyNjMxNzYxOTcwODQ5OAogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19yZWNyZWF0aW9uYWwtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICJlNjNjZTEzZTM0N2FiNmM5Yjg4Zjc5ZjNlNzY1MTVhN2YyNTc1ZTEzIiwKICAgICAgICAgIm5hbWUiIDogIlBhcnNsb2VzIFBhcmsiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZSwKICAgICAgICAgICAgIndlZWtkYXlfdGV4dCIgOiBbXQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDM0MTAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2OTAxNDQyOTQ4ODQ4NjU1MDE5L3Bob3Rvc1wiXHUwMDNlRGFycmVuIFN0YW5sZXlcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFvVzJlN29nSTZER1YybFROYl9Rc294OTRsWkZhWWJmQTBWMHNkQUV6UGdLT09pejEyeU9rWmFLeEpKV3VkVmF2YVBBSVN1QVdxZ0N0YjBVMDF0WjVseGNtVUFBbVdwa2d0X0I4aG9LVGdmRzN3YlI3M1U1RzZrV0tmSzA4MUg4dEVoQnoxSDJsVGZVUkdTeGZLX0plbnpJc0doU2FicTJGS3BieDZjekZlbTF5Zlc0UFUyUFZCUSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA1MTIyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKaFVQUWhxT2wyRWNSb0NjUDQ3ZVdjZGciLAogICAgICAgICAicmF0aW5nIiA6IDMuNSwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SU0FBQUFUSmg3RXJaRm9taHp6eGNBcFBRc05tcjdISEZvcXRBU0UzMTNPYUdBUlNaT1FudWd6SkVCWFVjM0tlcWxod01wVi1WY2xJaUVySWsweVJLZkJqdjNyVV96MnkxMjVZWmlYNC1xNGZNOThBYjBybWlQNVhLMk1KanNLaTN4SXVEWEVoRHpHWkVRcTdLVlBsLUZab1BQaV9XREdoVDRQUTBwYzc5ekhPaDFUNXpuUHhSZTB4SFB6QSIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBhcmsiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICIzMzMgSXZ5aG91c2UgUm9hZCwgRGFnZW5oYW0iCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImdlb21ldHJ5IiA6IHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IHsKICAgICAgICAgICAgICAgImxhdCIgOiA1MS40OTk2MjkzLAogICAgICAgICAgICAgICAibG5nIiA6IDAuMDY2NDM0NDk5OTk5OTk5OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTAwODkyNTgwMjkxNDksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wNjc4NDU5OTk5OTk5OTk5OQogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS40OTgxOTQ2MTk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDYyMgogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19yZWNyZWF0aW9uYWwtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICJlOWYyYjI2YWNhNTU4YmMxZWQxZDVmMGJmNjkxMmFmMmI2YzQ2ZWQyIiwKICAgICAgICAgIm5hbWUiIDogIlJveWFsIFZpY3RvcmlhIEdhcmRlbnMiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZSwKICAgICAgICAgICAgIndlZWtkYXlfdGV4dCIgOiBbXQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIzMjIsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA3Mzk4NjY4NTAzOTQ3MjcxODA4L3Bob3Rvc1wiXHUwMDNlTWFyaWEgTWFyY2VsYVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQXdPRFZyLUMybzc3MFpHT3JlMmpYYm5lTkJlOEd2WkpsOUk3Szh1MjNackhKeWdKcXc2MzNaUTZNTGMwcjRtcUlkUTdTXzJGYVdOZFdjVng2WFE5SmRBRm9yRHNuU3lvN0ZZc3FCUTJ4RVkwQlprcmtDNFQ2OWNIYmpzalBMa0MzRWhEQ2NvQ2hDaVZ2bmdIZkFwTUpVbjU4R2hTaTRiWS1nYWU0MFVOUlh1a3hZSHZQQi1PazJnIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQxMjgKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpfOEZZbVphbzJFY1JKVEdTS0paMkdZbyIsCiAgICAgICAgICJyYXRpbmciIDogNC4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJTQUFBQTJ5T3hfTzJuTlVEQzJOQU1tX1MwRjVRRmNDVm45SGZ4YTNEX2lhUy1SakprNzlrVk9wUmpRajdTQmNOOE9nakhqLWNXS1ozeGwyTkE2TlRqNkFXQ2k4ckN4UldSVW5oWkI0TkU3TTlsVmdaWC1jdUZRRi1ESzYtaHRYR2lTcE1wRWhBVVV4NXJIX0o4RnZocjNsYkx5X3pOR2hUMnJTZXY1ZlhjSWtSLWdKb29jWXVnY2hJVGp3IiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkxvbmRvbiIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ2NzQwMzYsCiAgICAgICAgICAgICAgICJsbmciIDogMC4wNjg0MzUzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ2ODc3NTIzMDI5MTUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wNjk4MTkyODAyOTE1MDIwMQogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS40NjYwNzcyNjk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDY3MTIxMzE5NzA4NDk3OTUKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfcmVjcmVhdGlvbmFsLTcxLnBuZyIsCiAgICAgICAgICJpZCIgOiAiNmI0NmM4NGNlZTc5ZWRmM2MxZGEwMzZkNTFjNmZiNDgzOTZmOWQwZiIsCiAgICAgICAgICJuYW1lIiA6ICJPeGxlYXMgV29vZCIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUsCiAgICAgICAgICAgICJ3ZWVrZGF5X3RleHQiIDogW10KICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxMjE2LAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwODk3NjE4MTQ1MzI2MTM3ODU3NS9waG90b3NcIlx1MDAzZUpvYW5uZSBGbGVtaW5nXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBcXhQUEx3eUJUZURaSkNpN2pXcUh4RjhoMEpkdXBvbW1FMHdTTllfd0ROa1ZrZjhMQjZBYS1Vb0JHUE45ZlRiOFZyNmFOcDBwRm5JbDRRSG54RGMzUHZRYTh5bWJ5dk9fazVnM1NwUU1lLU5rWEZUbHQyZ1VldWk0VWwwNDNGdXZFaENzUjB2aXNJWThoWFMwZEJJb2l5Mi1HaFNvUGdBQ2lRRFlNYjYzU2lVbVg5T2xocHMxaFEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMjA0OAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSm8wVl9LeC1wMkVjUmZsY1NuSFIyaXZvIiwKICAgICAgICAgInJhdGluZyIgOiA0LjcsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlNBQUFBcE02X2ZYS1FUUmFsTUU4M1R1Tkx1MTdPOTNMRzZ6RV9Ca0Zvcm5FV29XekF4UThpYUNSLWFfcmt5cnRZZmZxN2tJRkFyaTZDc3BqTkxBVGo5X1lpWFRMUW5YRmZXTjk5aWV6SzN4Q3ZtdkVJSzhmQVRQSl8tZjlTRGdUa2FiVzhFaEEyTFhyT1FZMEl1WUZLdC1Ya294TV9HaFNXcjZvQlFrQ01hcW5rNHQ2NlRCeVVEakFHQ1EiLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbICJwYXJrIiwgInBvaW50X29mX2ludGVyZXN0IiwgImVzdGFibGlzaG1lbnQiIF0sCiAgICAgICAgICJ2aWNpbml0eSIgOiAiQ3Jvd24gV29vZHMgTGFuZSwgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM2NjYwMSwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjE1NzA0MDcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTM4ODAzNiwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjE1ODc2MjkzMDI5MTUwMgogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41MzU5NDU2LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTU2MDY0OTY5NzA4NDk4CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9nZW5lcmljX3JlY3JlYXRpb25hbC03MS5wbmciLAogICAgICAgICAiaWQiIDogIjUyZDMwYjJmMmI2ZDBmNTJkNzZmZTJlMmU2Yzk1ZTdkM2FkZTljMmUiLAogICAgICAgICAibmFtZSIgOiAiT2xkIERhZ2VuaGFtIFBhcmsiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZSwKICAgICAgICAgICAgIndlZWtkYXlfdGV4dCIgOiBbXQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIzNjgsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA1MjczMzEwMjI4MzEyMTkxNDA5L3Bob3Rvc1wiXHUwMDNlU3RlcGhlbiBQcmltdXNcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFLUXZ1QVJMdHN4MG40Z3BuSkFIdXQ1aDE0T05lWFg3S2dmNTJsaGpzcWZQRU1MYk1xZ3V1OGp0UlpJZl9vNzNzWkxTT0pCbHdGWUFQVGRLa2NET3Fld0I2SkdxMWs0NjNCNExGYXU3U1NCU2x4WEhMQlJRU2FjZFBHazVMUzAtUEVoQVU1amRQekFIeXB3ZUZlMWViajNZdEdoVF9DVmtrS1U1V0ZXbkVlXy1TWkNVMUlUZktXUSIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MTYwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKcVlwUVpoS2wyRWNSZkJodXg2Q0o5Zm8iLAogICAgICAgICAicmF0aW5nIiA6IDQuMiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SU0FBQUFtNXdPR1JtNkI1RXZDSVExdmxDOHJ3MmQ5VFg2Unk4SFk1RzBRdzlKcXE1dFF5bnRWR245cHVWQzF1cEdFWUE3RnZqcVROc1J4RlN1anZOQUZtZGFwYy13RUprVkp3VkZiS3JaMzJYX2YtRzRYZjI3eDJCT2pPbl9WRlJtakQzVUVoRGtWTmVwaXpKZkhfd0JrYXVRdWJrY0doVE1SenhubFVQa3lXR0oxSUJwUTJSU3BDZHhVUSIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBhcmsiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICJCYWxsYXJkcyBSb2FkLCBEYWdlbmhhbSIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjUwMTAwNjcsCiAgICAgICAgICAgICAgICJsbmciIDogMC4xMzAxMTkzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUwMjM1NTY4MDI5MTQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTMxNDY4MjgwMjkxNTAyCiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ5OTY1NzcxOTcwODQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTI4NzcwMzE5NzA4NDk4CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9nZW5lcmljX3JlY3JlYXRpb25hbC03MS5wbmciLAogICAgICAgICAiaWQiIDogImVmMGUzODk1N2U4YTcwN2Q5MjhkZDM5YWE1MGZkMWY4ZmJmOWQyODIiLAogICAgICAgICAibmFtZSIgOiAiU291dGhtZXJlIFBhcmsiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiB0cnVlLAogICAgICAgICAgICAid2Vla2RheV90ZXh0IiA6IFtdCiAgICAgICAgIH0sCiAgICAgICAgICJwaG90b3MiIDogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICJoZWlnaHQiIDogNzIwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwNzQzMDMzMTkwOTU5MjA4MzE2NS9waG90b3NcIlx1MDAzZUFkYW0gTVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQXRyNkE4Yndud1FmeW85ZnJ0NEFDWFBKWkFMNzA3VzBlbFdPUUtEbjR1cUxxQ09WVDV2c1JfcVlZcThuX1RYWTNmc0RiUHNpV0pTeGlLQ2tYVHA2T2F1QlpSQ1l4Q3lhUDBsd0ZQNEhvejJVWDVOeFFWcldTeHZRRUdvX0k2eGtSRWhCUGY0OTIwT1k3cGRRUWQ3MnBaNHFaR2hTQ1FtdlB4bTBNVkxWN1NJdlhhTTlWU0FsbWRnIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDEyODAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpKUUtBNUcydjJFY1JpNVBKN2RUOEY2YyIsCiAgICAgICAgICJyYXRpbmciIDogMy45LAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJTQUFBQVhYSTkzMmtZRUpsbWdkV01jM0RRUGN3SW1kenFObmswVXA2cjNSemJERzBjRmZySDdfTlNYcXQtTXJaRjN3YUhCcVpCXzBKRC1vZjM4ZHZnalJtZk9vLVZFc2hRRXczbUdFdUNaZ1htYWdRUko4ZnZEZDFhSTdwdzVIQ2UzU0lxRWhBWkFFVkxna3Y5NDlEMkY5cjdvenZtR2hRam9ENWtHQWZqRG1ha3N6M0xhZ0FoTDJWdmVRIiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkhhcnRzbG9jayBEcml2ZSwgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTEwNjE3NCwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjA1ODYzMjMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTExOTY2MzgwMjkxNSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjA1OTk4MTI4MDI5MTUwMjAzCiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUwOTI2ODQxOTcwODUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wNTcyODMzMTk3MDg0OTc5NwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19yZWNyZWF0aW9uYWwtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICIzYjFiYjc0M2I4NjA2OGQzNTZjODkxNGZmYjQ4NjM3OGYyMGJiOTVjIiwKICAgICAgICAgIm5hbWUiIDogIk5ldyBCZWNrdG9uIFBhcmsiLAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDMwMjQsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTA5NTIwNzYxODAwNzEyMjk0OTMwL3Bob3Rvc1wiXHUwMDNlU3VydXIgRlVcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFWWnQwVDZBazJmeWtTLTZOMVh5cHVrWFVFNG0tOFUzMW80RzIzM2VTNkc3aHVOMU1LM2JOdHNVNlBJX29VbzJDcVRxUjRReXdDOHo0ZjR1R2xkUHJUamlzZG1tV3JlcE4yNGdraWZnbHZuNE1SZEVKTWVRb1JSazNuXzh3MU5sLUVoQkNHbXUyLWVVZUhkei1DcTFNbXdSeUdoUk40dnU2YTFVSXQwNHhGV2tJcWcyRHNMU2wzdyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiA0MDMyCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKR3phb3Q1eW8yRWNSSTJqZTcwVHRUY2MiLAogICAgICAgICAicmF0aW5nIiA6IDQuNiwKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SU0FBQUFGSkh3TnV3LUpJS3FLRXpmWHhKSDUwXzNyZU94RGd0bVk1Nm8wOURaZVAzX3dyY2M4czJ3dEljSFdFY24xNXhxXzF4LUJTcGw3T09BMGJwVU5lakJqX01rRkVpbnhrYzRXR0xTXy02SnZRaVVhZzBIbEZEMTNJR3ZaV0QwRmdEa0VoQkFUTDFhV0xDekxTcWNiMGpIZ0Uxd0doU0JfUmdzMUdSWmpaOTM1a1N4emI5WDVyYm1rdyIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBhcmsiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICIxIE9ha2VzIENsb3NlLCBMb25kb24iCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgImdlb21ldHJ5IiA6IHsKICAgICAgICAgICAgImxvY2F0aW9uIiA6IHsKICAgICAgICAgICAgICAgImxhdCIgOiA1MS41NDUxNDA4LAogICAgICAgICAgICAgICAibG5nIiA6IDAuMDg4MTQ4MjAwMDAwMDAwMDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTQ2NDg5NzgwMjkxNSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjA4OTQ5NzE4MDI5MTUwMjA0CiAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICJzb3V0aHdlc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjU0Mzc5MTgxOTcwODUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wODY3OTkyMTk3MDg0OTc5OAogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19yZWNyZWF0aW9uYWwtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICIyN2VlMDU3ZTgwMzMzNjVkMWM4ZGYyMzVlYTUxM2RhZWY4YTQzOTJlIiwKICAgICAgICAgIm5hbWUiIDogIkJhcmtpbmcgUGFyayIsCiAgICAgICAgICJvcGVuaW5nX2hvdXJzIiA6IHsKICAgICAgICAgICAgIm9wZW5fbm93IiA6IHRydWUsCiAgICAgICAgICAgICJ3ZWVrZGF5X3RleHQiIDogW10KICAgICAgICAgfSwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAzMDAwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwMDMwMTAxOTkwNTgxNTQxMDcxNy9waG90b3NcIlx1MDAzZU1vaGFtbWFkIEFzbGFtIEphdmVkIEJoYXR0aVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQUp2blBOdkVlS0xiM1ZwbmhLWkFDNXhzdmZoWk9CN0toZ2o0V0VoVU1XeXczVFduQWVnc2FMX3hmVjJnZGF5VWxRT2pIVzU0U3RxdTlPeFBST1RkVWVJY29VNllmdVdELUo5d3Zkd2RacTdYY3dvSkFiUk8zWjV1MFRraUlWU1hmRWhDYjZGX1NvRGh6OW10MVhvRV9ucmJoR2hTdDg3RGlzSVZLZ1hXdzZjQXRwUXZjTmRkTk5RIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDQwMDAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUp0NEIwQmRpbDJFY1JoRTktRWJxbk5oZyIsCiAgICAgICAgICJyYXRpbmciIDogNC4yLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJSQUFBQUNMUnlCVkROQTJmeFNJZDVGNDNKZXQ5YXFjY2hMckRUU19MSG13bXNXVFdCTGRIZW1TaldXMVJ4M1djNXNrajdfVnhZUWtFLWJfSUozSlZKSWFZRmg0RmtmZnlOMlk1bFBrUnJ0T3d3OWpzY05wUnh6NjVYQVZ6QXE1dXM1R0FSRWhEeHE0dUY1Q3lvYkNKQTRXLVNsakVZR2hUd2ZGbVVVM280bElFT1llZFRNU3lDRmk0eGZnIiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkxvbmdicmlkZ2UgUm9hZCwgQmFya2luZyIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjUyOTMxNzUsCiAgICAgICAgICAgICAgICJsbmciIDogMC4wNTI3NjM0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjUzMTI0NDQzMDI5MTUsCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4wNTM3NzU4ODAyOTE1MDIwNAogICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAic291dGh3ZXN0IiA6IHsKICAgICAgICAgICAgICAgICAgImxhdCIgOiA1MS41Mjg1NDY0Njk3MDg1LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMDUxMDc3OTE5NzA4NDk3OTcKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgIH0sCiAgICAgICAgICJpY29uIiA6ICJodHRwczovL21hcHMuZ3N0YXRpYy5jb20vbWFwZmlsZXMvcGxhY2VfYXBpL2ljb25zL2dlbmVyaWNfcmVjcmVhdGlvbmFsLTcxLnBuZyIsCiAgICAgICAgICJpZCIgOiAiOGNlYzI4MjM3ODU0MjJlMTk0NWViM2VjYTllYzliZDRhYzFhMTU5YyIsCiAgICAgICAgICJuYW1lIiA6ICJDZW50cmFsIFBhcmsiLAogICAgICAgICAib3BlbmluZ19ob3VycyIgOiB7CiAgICAgICAgICAgICJvcGVuX25vdyIgOiBmYWxzZSwKICAgICAgICAgICAgIndlZWtkYXlfdGV4dCIgOiBbXQogICAgICAgICB9LAogICAgICAgICAicGhvdG9zIiA6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICAiaGVpZ2h0IiA6IDIxNjAsCiAgICAgICAgICAgICAgICJodG1sX2F0dHJpYnV0aW9ucyIgOiBbCiAgICAgICAgICAgICAgICAgICJcdTAwM2NhIGhyZWY9XCJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2NvbnRyaWIvMTE2NDAzOTQ0NDEzMTcwNzE3MjYxL3Bob3Rvc1wiXHUwMDNlY2F0YWxpbmEgZ2FuZWFcdTAwM2MvYVx1MDAzZSIKICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgInBob3RvX3JlZmVyZW5jZSIgOiAiQ21SYUFBQUFXT0p1U0MycWYwSEk0ZGpRNVF1TThELUxaV0I4dFJBN1o0NVlXZHYxNG84U3dfOElKb0JZUWh2WFpkUXZpWlVhd0xVQWVKN2VpOHdIaG5RcWV2TUNVWVFReHBiekpKYUVfWl9mZnlUcV9uSXJGcDdocEo1R2FGSG9oNU1VcTNKc0VoREZJSUZxZk85RXg0WjZudFF3TlNOWEdoU0FMVW11NmVuUVdndmpvbHdWcWtDN3ZGSmEwZyIsCiAgICAgICAgICAgICAgICJ3aWR0aCIgOiAzODQwCiAgICAgICAgICAgIH0KICAgICAgICAgXSwKICAgICAgICAgInBsYWNlX2lkIiA6ICJDaElKeTh4MzNUT20yRWNScGNSSzY0cGtqSnMiLAogICAgICAgICAicmF0aW5nIiA6IDQuMywKICAgICAgICAgInJlZmVyZW5jZSIgOiAiQ21SU0FBQUFHSmRQYjF4aG9ueTlwUFA0NUlqSmx2bEFYU2hoNVVGRXhQb1VCbzFXUE9MWE9ZdzlMeHRpTUpHSTV1dS1iUnpkNTl1NnFldm5wTFpiaVJaN1Rfay1BbTNpYTRkQklOclVhM2dyX3U4c3ZwNThLRDVzQTA1MVJLSF9OaVd5bzVYc0VoQ3lTbU1fOFhVQ0FRazVpc2FlUUh1NEdoU3ZGWFJBdmFzT2M2bm50RmNtZFlKSGtkdllvQSIsCiAgICAgICAgICJzY29wZSIgOiAiR09PR0xFIiwKICAgICAgICAgInR5cGVzIiA6IFsgInBhcmsiLCAicG9pbnRfb2ZfaW50ZXJlc3QiLCAiZXN0YWJsaXNobWVudCIgXSwKICAgICAgICAgInZpY2luaXR5IiA6ICJDZW50cmFsIFBhcmsgUm9hZCwgTG9uZG9uIgogICAgICB9LAogICAgICB7CiAgICAgICAgICJnZW9tZXRyeSIgOiB7CiAgICAgICAgICAgICJsb2NhdGlvbiIgOiB7CiAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDk5ODQzNiwKICAgICAgICAgICAgICAgImxuZyIgOiAwLjExMjIzODYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInZpZXdwb3J0IiA6IHsKICAgICAgICAgICAgICAgIm5vcnRoZWFzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNTAxMTkyNTgwMjkxNDksCiAgICAgICAgICAgICAgICAgICJsbmciIDogMC4xMTM1ODc1ODAyOTE1MDIKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDk4NDk0NjE5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjExMDg4OTYxOTcwODQ5OAogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgfSwKICAgICAgICAgImljb24iIDogImh0dHBzOi8vbWFwcy5nc3RhdGljLmNvbS9tYXBmaWxlcy9wbGFjZV9hcGkvaWNvbnMvZ2VuZXJpY19yZWNyZWF0aW9uYWwtNzEucG5nIiwKICAgICAgICAgImlkIiA6ICI0MmZkOGUzYTEzNWZlZjJjNTJkMjMyZTg2Mjc0Mjk5MWVjNzk5ODU0IiwKICAgICAgICAgIm5hbWUiIDogIkJpcmNobWVyZSBQYXJrIiwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAxOTIwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzExMDQwODAyMzU0NTExNzgxNDE1NC9waG90b3NcIlx1MDAzZUthdml0YSBWYWNoYWtuYXZlZVx1MDAzYy9hXHUwMDNlIgogICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAicGhvdG9fcmVmZXJlbmNlIiA6ICJDbVJhQUFBQXhSUUhjV0RXOVBpX2JhMHFNYU1yUW9wZ19hMTFsTW5VRG43NmNILWVUUFF1R3pDSTgtamFjb2lTZElyMm16UkRqNWRLRTVXaUlmb0VhR3RaYk5EUjg1X0ItZThreU5IeTBobElzb3kxWjJETC1EaENXMVhMU1pETGpMYl9iWFdSRWhBRnNYV0Zkb0M3WkdKbWM0THd5bXdrR2hTSFFKMVdsR0ZOcmJ1eU1Lamptd2hxcWgwMC1BIiwKICAgICAgICAgICAgICAgIndpZHRoIiA6IDI1NjAKICAgICAgICAgICAgfQogICAgICAgICBdLAogICAgICAgICAicGxhY2VfaWQiIDogIkNoSUpOWWNnU2tLdjJFY1JTZkpTTkZUcm5QMCIsCiAgICAgICAgICJyYXRpbmciIDogNC4xLAogICAgICAgICAicmVmZXJlbmNlIiA6ICJDbVJTQUFBQTBBNjRDYWdXSGZIVGVHQkU0cGxwcUVOT0dPYWowR2pfcDduUDVxMFJmZUxLbkNUWWFlQXlaWGF3NDI5VXIxMEx4VU00ZzNZRHZReEZQd05ZbFdUeXRWLVpOQm5FT0ttUk9mWGM5c3UtT2FzcmkyYmRENnBqd1VRN21nczBCZnowRWhEaXYzci1FdGtVQVg0OTR1R1lwaC1SR2hRQ0dZd0Q1MlhELWtqcng5NS1QQ25ZVy1NMFhnIiwKICAgICAgICAgInNjb3BlIiA6ICJHT09HTEUiLAogICAgICAgICAidHlwZXMiIDogWyAicGFyayIsICJwb2ludF9vZl9pbnRlcmVzdCIsICJlc3RhYmxpc2htZW50IiBdLAogICAgICAgICAidmljaW5pdHkiIDogIkxvbmRvbiIKICAgICAgfSwKICAgICAgewogICAgICAgICAiZ2VvbWV0cnkiIDogewogICAgICAgICAgICAibG9jYXRpb24iIDogewogICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ4NzQ5ODIsCiAgICAgICAgICAgICAgICJsbmciIDogMC4xNTk1NjY1CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ2aWV3cG9ydCIgOiB7CiAgICAgICAgICAgICAgICJub3J0aGVhc3QiIDogewogICAgICAgICAgICAgICAgICAibGF0IiA6IDUxLjQ4OTM4MDAzMDI5MTQ5LAogICAgICAgICAgICAgICAgICAibG5nIiA6IDAuMTYyMjUzNzUKICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgInNvdXRod2VzdCIgOiB7CiAgICAgICAgICAgICAgICAgICJsYXQiIDogNTEuNDg2NjgyMDY5NzA4NSwKICAgICAgICAgICAgICAgICAgImxuZyIgOiAwLjE1ODY3MDc1CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICB9LAogICAgICAgICAiaWNvbiIgOiAiaHR0cHM6Ly9tYXBzLmdzdGF0aWMuY29tL21hcGZpbGVzL3BsYWNlX2FwaS9pY29ucy9nZW5lcmljX3JlY3JlYXRpb25hbC03MS5wbmciLAogICAgICAgICAiaWQiIDogImVhOWEyMzA3NjRkNjA4NzQ2MDgyMjllMTU5YzRlYzY4MDdlNTQ4MjciLAogICAgICAgICAibmFtZSIgOiAiRnJhbmsncyBQYXJrIiwKICAgICAgICAgInBob3RvcyIgOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgImhlaWdodCIgOiAyMTYwLAogICAgICAgICAgICAgICAiaHRtbF9hdHRyaWJ1dGlvbnMiIDogWwogICAgICAgICAgICAgICAgICAiXHUwMDNjYSBocmVmPVwiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9jb250cmliLzEwODM2MDkxNjA1MTE5NzcwMTY3NS9waG90b3NcIlx1MDAzZU9sIE1lXHUwMDNjL2FcdTAwM2UiCiAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICJwaG90b19yZWZlcmVuY2UiIDogIkNtUmFBQUFBdEpUUUFIV2t2OWxkaFMtSmRUTjNjX3VfU2EyVTlTZy13WnZrMmxrVDZ1NU1YaUJlREM1YjJEVGhGR3BHM3BSZzFUVzhDdkxKdHlGVXFDazg3US16Mk1hVWM4cTd4aHVaNEVabVdvdjBWaHdjVHJZb2xmNlpnOEoxcV8wZkI2QWhFaERtTU05Z29zUnJGNTl0V2ZLeVBrZmJHaFJJN1l3Wm9sdGxNZ2tPY2NUd25na3dKUVJxMVEiLAogICAgICAgICAgICAgICAid2lkdGgiIDogMzg0MAogICAgICAgICAgICB9CiAgICAgICAgIF0sCiAgICAgICAgICJwbGFjZV9pZCIgOiAiQ2hJSkJiZENRTG12MkVjUmZDOXp5YmF4Mm13IiwKICAgICAgICAgInJhdGluZyIgOiA0LjMsCiAgICAgICAgICJyZWZlcmVuY2UiIDogIkNtUlJBQUFBZDQzLTJSWk1OMmxWMnY3REM1bUZYLVdSRzBSOVREX2FEZUl2NkJYNS1wNFYxVFg2elNMWi1LSWx3cGZPazNrbWczQ2JraFZUU3Q1NFhCZVJXSUlNeWh2ZE8xZjZMY0NONXR0TjF0OV9EOEpiMnpsU3JQb2I5RXRrUUx5STllbWxFaEFHNENtM0VPaW5veUJVWWFzM3lPelhHaFQyN1VhcjJLS1R4bG9hQjhLTXpDaXVReERja0EiLAogICAgICAgICAic2NvcGUiIDogIkdPT0dMRSIsCiAgICAgICAgICJ0eXBlcyIgOiBbICJwYXJrIiwgInBvaW50X29mX2ludGVyZXN0IiwgImVzdGFibGlzaG1lbnQiIF0sCiAgICAgICAgICJ2aWNpbml0eSIgOiAiMzYgUG9wbGFyIE1vdW50LCBCZWx2ZWRlcmUiCiAgICAgIH0KICAgXSwKICAgInN0YXR1cyIgOiAiT0siCn0K
    http_version: 
  recorded_at: Tue, 18 Jul 2017 19:41:10 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=<KEY>&placeid=ChIJA17AEnqv2EcRl3cRjVDyPQA
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 19:41:10 GMT
      Expires:
      - Tue, 18 Jul 2017 19:46:10 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '4346'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 18 Jul 2017 19:41:10 GMT
recorded_with: VCR 3.0.3
