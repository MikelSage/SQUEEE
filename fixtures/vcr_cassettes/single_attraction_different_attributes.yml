---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=<KEY>&keyword=attraction&language=english&location=51.5074,0.1278&radius=5000&types=point-of-interest
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 14:52:38 GMT
      Expires:
      - Tue, 18 Jul 2017 14:57:38 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '10213'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 18 Jul 2017 14:52:40 GMT
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=<KEY>&placeid=ChIJA17AEnqv2EcRl3cRjVDyPQA
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.12.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Tue, 18 Jul 2017 14:52:39 GMT
      Expires:
      - Tue, 18 Jul 2017 14:57:39 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - pablo
      Content-Length:
      - '4346'
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 18 Jul 2017 14:52:41 GMT
recorded_with: VCR 3.0.3
